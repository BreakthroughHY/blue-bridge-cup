#include "main.h"

int main()
{
	// 枚举---------------------------------------------------------------------------

	//countPrime(); // 计数质数	Count prime

	//sumContinuousInteger(); // 连续整数求和	Sum of continuous integers

	//mountainArray(); // 数组中的最长山脉		The longest mountain range in the array

	//superNumberPalindromes(); // 超级回文数	Number of super palindromes // 在另一台电脑上进行深度优化，目前没有成功。

	//getPower2Reorder(); // 重新排序得到 2 的幂	Reorder to get the power of 2

	//maximumTimeWithinAnArray(); // 给定数字能组成的最大时间		The maximum time that a given number can compose

	//backToLongestTextStr(); // 最长回文子串	Longest Palindromic Substring

	//parenthesesGenerates(); // 括号生成		bracket-generating

	//maximumEffectiveBrackets(); // 最长有效括号	Longest valid bracket

	//afterRain(); // 接雨水	Connected to rainwater

	//wildcardMatch(); // 通配符匹配	Wildcard matching

	//jumpingGamesII(); // 跳跃游戏 II	Jump Game II

	//architecturalTheArray(); // MaximumSubarrayAnd	最大子数组和 // 不使用暴力法，通过找规律写代码失败，考虑因素太多，目前觉得使用官网方法――动态规划优化过的暴力法

	//jumpingGames(); // 跳跃游戏		Jump game

	//differentPaths(); // 不同路径	Different paths

	//differentPathsII(); // 不同路径 II		Different path II

	//minimumPathAnd(); // 最小路径和		Minimum path and

	//climbStairs(); // 爬楼梯		climb stairs

	//editDistance(); // 编辑距离	Edit distance

	//biggestRectangle(); // 最大矩形	Maximum rectangle

	//disturbString(); // 扰乱字符串	Disturb string

	//decodingMethod(); // 解码方法	Decoding method

	//staggeredStr(); // 交错字符串	Interlaced String

	//differentSubsequence(); // 不同的子序列	Different subsequences

	//bestTimeToBuyStocksIII(); // 买卖股票的最佳时机 III	The Best Time to Buy and Sell Stocks III

	//yangHuiTriangle(); // 杨辉三角	Yang Hui Triangle

	//yangHuiTriangleII(); // 杨辉三角 II	Yang Hui Triangle II

	//triangleMinimumPath(); // 三角形最小路径和	Triangle minimum path sum

	//bestTimeToBuySellStocks(); // 买卖股票的最佳时机	The Best Time to Buy and Sell Stocks
	
	splitPalindromeString(); // 分割回文串	Split palindrome string

	// 贪心算法---------------------------------------------------------------------------------------------------

	//containersWaterAreMost(); // 盛最多水的容器	Container with the most water

	//bestTimeToBuyStocksII(); // 买卖股票的最佳时机 II	The best time to buy and sell stocks II

	//gasStation(); // 加油站	gas station

	//pointsCandy(); // 分发糖果	Distribute candy

	//maximumNumber(); // 最大数		Maximum

	//removeDuplicateLetters(); // 去除重复字母	Remove duplicate letters

	// 哈希表---------------------------------------------------------------------

	//integerRomaNum(); // 整形转罗马数字	Integer to Roman Numeral

	//romanNumeralToInteger(); // 罗马数字转整数	Roman Numeral to Integer

	//numberLetterCombinations(); // 电话号码的字母组合	Alphabetical combination of phone numbers

	//allWordsInSeriesSequenceNumbers(); // 串联所有单词的子串	Concatenate substrings of all words

	//validSudoku(); // 有效的数独	Effective Sudoku

	//theirIndependence(); // 解数独	Solving sudoku

	//lackTheFirstPositiveNumber(); // 缺失的第一个正数	Missing first positive number

	//lettersEctopicWordGroups(); // 字母异位词分组	Alphabetic heterotopic word grouping

	//matrixZero(); // 矩阵置零		Matrix Zeroing

	//minimumCoverSubstring(); // 最小覆盖子串	Minimum cover substring

	//onceUponTimeSequenceTheSequenceStructureBinaryTreeTraversalSequence(); // 从前序与中序遍历序列构造二叉树	Constructing binary tree from Pre order and Middle order Traversal Sequences

	//fromSequenceWithSequenceStructureBinaryTreeTraversalSequence(); // 从中序与后序遍历序列构造二叉树	Constructing binary tree from Middle and Post Order Traversal Sequences

	//randomlyII(); // 单词接龙 II	Word Relay II

	//wordChain(); // 单词接龙	Word Chain

	//longestContinuousSequence(); // 最长连续序列	Longest continuous sequence

	//cloningFigure(); // 克隆图	Clone Graph

	return 0;
}
